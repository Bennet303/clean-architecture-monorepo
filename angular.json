{
  "version": 1,
  "projects": {
    "api": {
      "root": "apps/api",
      "sourceRoot": "apps/api/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/api",
            "main": "apps/api/src/main.ts",
            "tsConfig": "apps/api/tsconfig.app.json",
            "assets": ["apps/api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.prod.ts"
                }
              ]
            },
            "development": {
              "optimization": false,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.dev.ts"
                }
              ]
            },
            "local": {
              "optimization": false,
              "extractLicenses": false
            },
            "mock": {
              "optimization": false,
              "extractLicenses": false,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.mock.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "configurations": {
            "production": {
              "buildTarget": "api:build:production"
            },
            "development": {
              "buildTarget": "api:build:development"
            },
            "local": {
              "buildTarget": "api:build:local"
            },
            "mock": {
              "buildTarget": "api:build:mock"
            }
          },
          "defaultConfiguration": "local",
          "options": {
            "buildTarget": "api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/api/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/api"],
          "options": {
            "jestConfig": "apps/api/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "dtos": {
      "root": "libs/dtos",
      "sourceRoot": "libs/dtos/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/dtos/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/dtos"],
          "options": {
            "jestConfig": "libs/dtos/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "frontend": {
      "projectType": "application",
      "root": "apps/frontend",
      "sourceRoot": "apps/frontend/src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/frontend",
            "index": "apps/frontend/src/index.html",
            "main": "apps/frontend/src/main.ts",
            "polyfills": "apps/frontend/src/polyfills.ts",
            "tsConfig": "apps/frontend/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/frontend/src/assets",
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              }
            ],
            "styles": [
              "apps/frontend/src/styles.scss",
              "apps/frontend/src/theme/main.scss",
              {
                "input": "apps/frontend/src/theme/variables.scss"
              }
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/frontend/src/environments/environment.ts",
                  "with": "apps/frontend/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/frontend/src/environments/environment.ts",
                  "with": "apps/frontend/src/environments/environment.dev.ts"
                }
              ],
              "outputHashing": "all"
            },
            "mock": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "apps/frontend/src/environments/environment.ts",
                  "with": "apps/frontend/src/environments/environment.mock.ts"
                }
              ]
            },
            "local": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "frontend:build:production"
            },
            "development": {
              "browserTarget": "frontend:build:development"
            },
            "mock": {
              "browserTarget": "frontend:build:mock"
            },
            "local": {
              "browserTarget": "frontend:build:local"
            }
          },
          "defaultConfiguration": "local"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "frontend:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/frontend/src/**/*.ts",
              "apps/frontend/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/frontend"],
          "options": {
            "jestConfig": "apps/frontend/jest.config.js",
            "passWithNoTests": true
          }
        },
        "cap": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "--help"
          }
        },
        "add": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "add"
          },
          "configurations": {
            "ios": {
              "cmd": "add ios"
            },
            "android": {
              "cmd": "add android"
            }
          }
        },
        "copy": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "copy"
          },
          "configurations": {
            "ios": {
              "cmd": "copy ios"
            },
            "android": {
              "cmd": "copy android"
            }
          }
        },
        "open": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "open"
          },
          "configurations": {
            "ios": {
              "cmd": "open ios"
            },
            "android": {
              "cmd": "open android"
            }
          }
        },
        "run": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "run"
          },
          "configurations": {
            "ios": {
              "cmd": "run ios"
            },
            "android": {
              "cmd": "run android"
            }
          }
        },
        "sync": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "sync"
          },
          "configurations": {
            "ios": {
              "cmd": "sync ios"
            },
            "android": {
              "cmd": "sync android"
            }
          }
        },
        "update": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "update"
          },
          "configurations": {
            "ios": {
              "cmd": "update ios"
            },
            "android": {
              "cmd": "update android"
            }
          }
        },
        "storybook": {
          "builder": "@nrwl/storybook:storybook",
          "options": {
            "uiFramework": "@storybook/angular",
            "port": 4400,
            "config": {
              "configFolder": "apps/frontend/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build-storybook": {
          "builder": "@nrwl/storybook:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "uiFramework": "@storybook/angular",
            "outputPath": "dist/storybook/frontend",
            "config": {
              "configFolder": "apps/frontend/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        }
      }
    },
    "frontend-e2e": {
      "root": "apps/frontend-e2e",
      "sourceRoot": "apps/frontend-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/frontend-e2e/cypress.json",
            "devServerTarget": "frontend:serve:mock"
          },
          "configurations": {
            "development": {
              "devServerTarget": "frontend:serve:development"
            },
            "production": {
              "devServerTarget": "frontend:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/frontend-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "prisma-models": {
      "root": "libs/prisma-models",
      "sourceRoot": "libs/prisma-models/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/prisma-models/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/prisma-models"],
          "options": {
            "jestConfig": "libs/prisma-models/jest.config.js",
            "passWithNoTests": true
          }
        },
        "prisma-generate": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "./node_modules/.bin/prisma generate --schema ./libs/prisma-models/prisma/schema.prisma",
            "cwd": "./"
          }
        },
        "migrate-save": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "../../node_modules/.bin/prisma migrate dev --create-only --preview-feature --schema ./prisma/schema.prisma",
            "cwd": "libs/prisma-models"
          }
        },
        "migrate-up": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "../../node_modules/.bin/prisma migrate dev --preview-feature --schema ./prisma/schema.prisma",
            "cwd": "libs/prisma-models"
          }
        },
        "migrate-reset": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "../../node_modules/.bin/prisma migrate reset --preview-feature --schema ./prisma/schema.prisma",
            "cwd": "libs/prisma-models"
          }
        },
        "migrate-deploy": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "../../node_modules/.bin/prisma migrate deploy --preview-feature --schema ./prisma/schema.prisma",
            "cwd": "libs/prisma-models"
          }
        },
        "migrate-status": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "../../node_modules/.bin/prisma migrate status --preview-feature --schema ./prisma/schema.prisma",
            "cwd": "libs/prisma-models"
          }
        },
        "studio": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "../../node_modules/.bin/prisma studio --schema ./prisma/schema.prisma",
            "cwd": "libs/prisma-models"
          }
        }
      }
    },
    "shared": {
      "root": "libs/shared",
      "sourceRoot": "libs/shared/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/shared/**/*.ts"]
          }
        }
      }
    },
    "shared-components": {
      "projectType": "library",
      "root": "libs/shared-components",
      "sourceRoot": "libs/shared-components/src",
      "prefix": "clean-architecture-monorepo",
      "architect": {
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared-components"],
          "options": {
            "jestConfig": "libs/shared-components/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/shared-components/src/**/*.ts",
              "libs/shared-components/src/**/*.html"
            ]
          }
        },
        "storybook": {
          "builder": "@nrwl/storybook:storybook",
          "options": {
            "uiFramework": "@storybook/angular",
            "port": 4400,
            "config": {
              "configFolder": "libs/shared-components/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build-storybook": {
          "builder": "@nrwl/storybook:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "uiFramework": "@storybook/angular",
            "outputPath": "dist/storybook/shared-components",
            "config": {
              "configFolder": "libs/shared-components/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        }
      }
    },
    "shared-components-e2e": {
      "root": "apps/shared-components-e2e",
      "sourceRoot": "apps/shared-components-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/shared-components-e2e/cypress.json",
            "devServerTarget": "shared-components:storybook"
          },
          "configurations": {
            "ci": {
              "devServerTarget": "shared-components:storybook:ci"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/shared-components-e2e/**/*.{js,ts}"]
          }
        }
      }
    }
  },
  "defaultProject": "frontend",
  "schematics": {
    "@nrwl/angular:application": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "jest"
    },
    "@nrwl/angular:component": {
      "style": "scss"
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/angular"
  }
}
